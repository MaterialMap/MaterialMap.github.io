name: Generate TOML File List

on:
  push:
    branches:
      - main # Запускается при пуше в ветку main
  workflow_dispatch: # Возможность ручного запуска

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Или другая версия Node.js

    - name: Generate TOML file list with modification dates
      run: |
        mkdir -p dist # Создаем директорию для вывода
        node -e "
        const fs = require('fs');
        const path = require('path');
        const { execSync } = require('child_process');
        const dataDir = path.join(__dirname, 'data');
        const files = fs.readdirSync(dataDir).filter(file => file.endsWith('.toml'));
        
        const fileData = files.map(file => {
          const filePath = path.join(dataDir, file);
          let lastModified;
          
          try {
            // Extract the base name without extension for searching in commit messages
            const baseName = path.basename(file, '.toml');
            
            // Try to find a commit that specifically mentions this file or material
            let gitDate = null;
            
            try {
              // First, try to find commits that mention the file name in the message
              const commitSearch = execSync(\`git log --all --grep=\"\${baseName}\" --format=%cI | head -1\`, { encoding: 'utf8' }).trim();
              if (commitSearch) {
                gitDate = commitSearch;
              }
            } catch (e) {
              // Ignore grep errors
            }
            
            // If no specific commit found, try to get the first commit that added this file
            if (!gitDate) {
              try {
                const firstCommit = execSync(\`git log --reverse --format=%cI -- \"\${filePath}\" | head -1\`, { encoding: 'utf8' }).trim();
                if (firstCommit) {
                  gitDate = firstCommit;
                }
              } catch (e) {
                // Ignore errors
              }
            }
            
            // Convert to date-only format (YYYY-MM-DD)
            const dateOnly = gitDate ? new Date(gitDate).toISOString().split('T')[0] : new Date(fs.statSync(filePath).mtime).toISOString().split('T')[0];
            lastModified = dateOnly;
            
          } catch (error) {
            // Fallback to file system modification time (date only)
            lastModified = new Date(fs.statSync(filePath).mtime).toISOString().split('T')[0];
          }
          
          return {
            filename: file,
            lastModified: lastModified
          };
        });
        
        fs.writeFileSync('dist/file-list.json', JSON.stringify(fileData, null, 2));
        console.log('Generated file-list.json with modification dates:', fileData);
        "
    - name: Commit and push file list
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "actions@github.com"
        git add dist/file-list.json
        git commit -m "Update file list [skip ci]" || echo "No changes to commit"
        git push origin main
    
    - name: Upload file list artifact # Добавляем шаг для загрузки артефакта
      uses: actions/upload-artifact@v4
      with:
        name: file-list-json # Имя артефакта
        path: dist/file-list.json # Путь к файлу